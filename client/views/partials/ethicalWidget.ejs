<div class="widget-container">
  <h2>Ethical Project</h2>
  <input type="button" value="Add new" id="addBtnProject" class="widget-button" disabled/>
  <input type="button" value="Update" id="updateBtnProject" class="widget-button" disabled />
  <input type="button" value="Delete" id="deleteBtnProject" class="widget-button" disabled />
  <div id="errorMsg" class="error-message"></div>
  <div id="jqxComboBoxProject" class="dropdown-container"></div>

  <h2>Ethical Experiment</h2>
  <input type="button" value="Add new" id="addBtnEthExp" class="widget-button" disabled/>
  <input type="button" value="Update" id="updateBtnEthExp" class="widget-button" disabled />
  <input type="button" value="Delete" id="deleteBtnEthExp" class="widget-button" disabled />
  <div id="errorMsgEthExp" class="error-message"></div>
  <div id="jqxComboBoxEthExp" class="dropdown-container"></div>
</div>
<script>
$(document).ready(function () {

  // PROJECT
  let projectChangeEvent = function(detail=null) { return new CustomEvent('projectChange', {detail: detail}); }

  let source = {
    localdata: [],
    datatype: "json"
  };
  let dataAdapter = new $.jqx.dataAdapter(source);

  $("#jqxComboBoxProject").jqxComboBox({
    autoComplete: true,
    searchMode: 'containsignorecase',
    source: dataAdapter,
    displayMember: "title",
    valueMember: "id",
    //filterable: true,
    width: 200,
    height: 25,
    autoDropDownHeight: true,
    //theme: 'metro'
  });
  
    $("#jqxComboBoxProject").on('input', function () {
    const title = $(this).jqxComboBox('input').val();
    $('#jqxComboBoxProject').jqxComboBox('selectItem', null);
    $('#jqxComboBoxProject').jqxComboBox('input').val(title);
    $('#updateBtnProject, #deleteBtnProject').attr('disabled', 'disabled');
    clearEthExp();
    if (title) {
      $('#addBtnProject').removeAttr('disabled');
    } else {
      $('#addBtnProject').attr('disabled', 'disabled');
    }
  });
    let refreshComboBox = function(selectedItemId) {
    $.ajax({
      url: "/projects_data",
      type: "GET",
      success: function (data) {
        console.log(data);
        source.localdata = data;
        dataAdapter = new $.jqx.dataAdapter(source); // Update the data adapter source
        $("#jqxComboBoxProject").jqxComboBox({source: dataAdapter}); // Update the jqxComboBox source
        if(selectedItemId){
          $('#jqxComboBoxProject').jqxComboBox('selectItem', selectedItemId);
        }
        window.dispatchEvent(new CustomEvent("projectsLoaded"));
      }
    });
  };

  window.addEventListener('projectChange', function (e) {
    refreshComboBox(e.detail);
  });

  window.dispatchEvent(projectChangeEvent());

  $('#jqxComboBoxProject').on('select', function (event) {
    if (event.args) {
      let projectId = event.args.item.value;
      $('#updateBtnProject, #deleteBtnProject').removeAttr('disabled');
      $('#addBtnProject').attr('disabled', 'disabled');
      refreshExperimentComboBox(projectId); // Refresh the experiment ComboBox when a project is selected
    } //else {
      //$('#updateBtnProject, #deleteBtnProject').attr('disabled', 'disabled');
      //refreshExperimentComboBox(null); // Clear the experiment ComboBox when the project selection is cleared
    //}
  });
 
  let onsuccess = function (data = null) {
    let id = data ? data.id : null;
    $('#errorMsg').hide();
    window.dispatchEvent(projectChangeEvent(id));

  };

  $('#addBtnProject').click(function () {
    let title = $("#jqxComboBoxProject").jqxComboBox('input').val();
    if (!title) return;
  
    $.ajax({
        url: '/projects',
        type: 'POST',
        data: { title },
        success: onsuccess,
        error: function (jqXHR) {
        let json = JSON.parse(jqXHR.responseText)
        let errorMessage = json.error;
        $('#errorMsg').text(errorMessage).show();
        if (jqXHR.status === 409) { // HTTP status 409: Conflict
            window.dispatchEvent(projectChangeEvent(json.id));
        }
        }
    });
  });

  $('#updateBtnProject').click(function () {
    let selectedItem = $('#jqxComboBoxProject').jqxComboBox('getSelectedItem');
    let newTitle = prompt("Please enter new title for the project:");
    if (newTitle != null) {
        $.ajax({
        url: '/projects/' + selectedItem.value,
        type: 'PUT',
        data: { title: newTitle },
        success: onsuccess,
        error: function (jqXHR) {
            let json = JSON.parse(jqXHR.responseText)
            let errorMessage = json.error;
            $('#errorMsg').text(errorMessage).show();
            if (jqXHR.status === 409) { // HTTP status 409: Conflict
                window.dispatchEvent(projectChangeEvent(json.id));
            } 
        }
        });
    }
  });

  $('#deleteBtnProject').click(function () {
    let selectedItem = $('#jqxComboBoxProject').jqxComboBox('getSelectedItem');
    $.ajax({
      url: '/projects/' + selectedItem.value,
      type: 'DELETE',
      success: function () {
        $('#jqxComboBoxProject').jqxComboBox('removeItem', selectedItem);
        $('#errorMsg').hide();
        clearEthExp();
      },
      error: function (jqXHR) {
        let json = JSON.parse(jqXHR.responseText);
        let errorMessage = json.error;
        $('#errorMsgEthExp').text(errorMessage).show();
      }
    });
    $('#updateBtnProject, #deleteBtnProject').attr('disabled', 'disabled');
  });
});

  // Experiment

  let ethExpChangeEvent = function(detail=null) { return new CustomEvent('ethExpChange', {detail: detail}); }

  let sourceEthExp= {
    localdata: [],
    datatype: "json"
  };
  let expDataAdapter = new $.jqx.dataAdapter(sourceEthExp);

  // Ethical Experiment ComboBox
  $("#jqxComboBoxEthExp").jqxComboBox({
    autoComplete: true,
    searchMode: 'containsignorecase',
    source: expDataAdapter,
    displayMember: "title",
    valueMember: "id",
    width: 200,
    height: 25,
    autoDropDownHeight: true,
    disabled: true
  });

  let clearEthExp = function()
  {
    $('#updateBtnEthExp, #deleteBtnEthExp, #addBtnEthExp').attr('disabled', 'disabled');
    $('#jqxComboBoxEthExp').jqxComboBox('clearSelection');
    $("#jqxComboBoxEthExp").jqxComboBox({disabled: true});
  };

  // Refresh the Ethical Experiment ComboBox
  let refreshExperimentComboBox = function(projectId, selectedExperimentId) {
    clearEthExp();
    if (!projectId) {
      // If there's no selected project, clear the experiment ComboBox and disable it
      sourceEthExp.localdata = [];
      dataAdapterEthExp = new $.jqx.dataAdapter(sourceEthExp);
      $("#jqxComboBoxEthExp").jqxComboBox({source: dataAdapterEthExp, disabled: true});
      return;
    }

    // Otherwise, load the experiments related to the selected project
    $.ajax({
      url: "/projects/" + projectId + "/experiments_data",
      type: "GET",
      success: function (data) {
        sourceEthExp.localdata = data;
        dataAdapterEthExp = new $.jqx.dataAdapter(sourceEthExp);
        $("#jqxComboBoxEthExp").jqxComboBox({source: dataAdapterEthExp, disabled: false});

        if(selectedExperimentId){
          $('#jqxComboBoxEthExp').jqxComboBox('selectItem', selectedExperimentId);
        }
        window.dispatchEvent(new CustomEvent("ethExpLoaded"));
      }
    });
  };

  $("#jqxComboBoxEthExp").on('input', function () {
    const title = $(this).jqxComboBox('input').val();
    $('#jqxComboBoxEthExp').jqxComboBox('selectItem', null);
    $('#jqxComboBoxEthExp').jqxComboBox('input').val(title);
    $('#updateBtnEthExp, #deleteBtnEthExp').attr('disabled', 'disabled');
    if (title) {
      $('#addBtnEthExp').removeAttr('disabled');
    } else {
      $('#addBtnEthExp').attr('disabled', 'disabled');
    }
  });

  $('#jqxComboBoxEthExp').on('select', function (event) {
    if (event.args) {
      $('#updateBtnEthExp, #deleteBtnEthExp').removeAttr('disabled');
      $("#addBtnEthExp").attr("disabled", "disabled");
    } //else {
      //$('#updateBtnEthExp, #deleteBtnEthExp').attr('disabled', 'disabled');
    //}
  });

  // The following event handlers are the same as for the projects, but applied to experiments
  // They use '/projects/' + projectId + '/experiments' for the AJAX URL
  // And they call refreshExperimentComboBox instead of refreshComboBox
  function onsuccessEthExp(selectedExperimentId) {
    let projectId = $('#jqxComboBoxProject').jqxComboBox('getSelectedItem').value;
    refreshExperimentComboBox(projectId, selectedExperimentId);
    $('#errorMsgEthExp').hide();
  }

  $('#addBtnEthExp').click(function () {
    let title = $("#jqxComboBoxEthExp").jqxComboBox('input').val();
    let projectId = $('#jqxComboBoxProject').jqxComboBox('getSelectedItem').value;
    if (!title) return;

    $.ajax({
        url: '/projects/' + projectId + '/experiments',
        type: 'POST',
        data: { title },
        success: function (data) {
          onsuccessEthExp(data.id);
        },
        error: function (jqXHR) {
        let json = JSON.parse(jqXHR.responseText)
        let errorMessage = json.error;
        $('#errorMsgEthExp').text(errorMessage).show();
        if (jqXHR.status === 409) { // HTTP status 409: Conflict
            refreshExperimentComboBox(projectId, json.id);
        }
        }
    });
  });

  $('#updateBtnEthExp').click(function () {
    let selectedItem = $('#jqxComboBoxEthExp').jqxComboBox('getSelectedItem');
    let projectId = $('#jqxComboBoxProject').jqxComboBox('getSelectedItem').value;
    let newTitle = prompt("Please enter new title for the experiment:");
    if (newTitle != null) {
        $.ajax({
        url: '/projects/' + projectId + '/experiments/' + selectedItem.value,
        type: 'PUT',
        data: { title: newTitle },
        success: function () {
          onsuccessEthExp(selectedItem.value);
        },
        error: function (jqXHR) {
          let json = JSON.parse(jqXHR.responseText);
          let errorMessage = json.error;
          $('#errorMsgEthExp').text(errorMessage).show();
          if (jqXHR.status === 409) { // HTTP status 409: Conflict
            refreshExperimentComboBox(projectId, selectedItem.value);
          }
        }
      });
    }
  });

  $('#deleteBtnEthExp').click(function () {
    let selectedItem = $('#jqxComboBoxEthExp').jqxComboBox('getSelectedItem');
    let projectId = $('#jqxComboBoxProject').jqxComboBox('getSelectedItem').value;
    if (!selectedItem) return;

    $.ajax({
      url: '/projects/' + projectId + '/experiments/' + selectedItem.value,
      type: 'DELETE',
      success: function () {
        onsuccessEthExp(null);
      },
      error: function (jqXHR) {
        let json = JSON.parse(jqXHR.responseText);
        let errorMessage = json.error;
        $('#errorMsgEthExp').text(errorMessage).show();
      }
    });
  });

</script>